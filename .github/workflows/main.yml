name: build-test
on: 
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '0 */6 * * *'

jobs:
  build_and_test:
    name: 'Build and Test'
    runs-on: ubuntu-latest
    strategy:
      matrix:
        ros_distro: [kinetic, melodic]
        include:
        - ros_distro: kinetic
          ubuntu_distro: xenial
        - ros_distro: melodic
          ubuntu_distro: bionic
    container:
      image: rostooling/setup-ros-docker:ubuntu-${{ matrix.ubuntu_distro }}-ros-${{ matrix.ros_distro }}-ros-base-latest
    outputs:
      build_result: ${{ steps.build.outcome }}
      test_result: ${{ steps.test.outcome }}
    steps:
    - name: Setup Environment # TODO(setup-ros-docker#7): calling chown is necessary for now
      env:
        ACCESS_TOKEN: ${{ secrets.PERSISTENT_GITHUB_TOKEN }}
      run: |
        sudo chown -R rosbuild:rosbuild "$HOME" .
        git config --global url."https://${ACCESS_TOKEN}@github.com".insteadOf "https://github.com"
    - id: build
      name: Build
      uses: ros-tooling/action-ros-ci@945bf64ade1ec7b463fa2e102cbec6992172edf5
      with:
        source-ros-binary-installation: ${{ matrix.ros_distro }}
        vcs-repo-file-url: ''
        package-name: rosbag_cloud_recorders s3_common s3_file_uploader rosbag_uploader_ros1_integration_tests
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - id: test
      name: Integration Tests
      uses: ./ros_ws/src/rosbag-uploader-ros1/.github/actions/ros1-integ-test/
      with:
        integ-test-package-name: 'rosbag_uploader_ros1_integration_tests'
        integ-test-launch-files: |
          test_duration_recorder_general.test
          test_periodic_file_deleter.test
          test_rolling_recorder_custom_topic.test
          test_rolling_recorder_default_topics.test
          test_rolling_recorder_upload.test
          test_s3_file_uploader_general.test
          test_s3_file_uploader_wrong_region.test
        ros-distro: ${{ matrix.ros_distro }}
        workspace-dir: ./ros_ws
    - name: Clang Tidy
      uses: ./ros_ws/src/rosbag-uploader-ros1/.github/actions/clang-tidy/
    - name: Post Coverage to Codecov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: './ros_ws/coverage/*'
        flags: '${{ matrix.ros_distro }},ROS_1'
        fail_ci_if_error: true
        yml: ./ros_ws/.codecov.yml
    - name: Upload Coverage
      uses: actions/upload-artifact@v1
      with:
        name: coverage
        path: coverage/

  log_workflow_status_to_cloudwatch:
    name: 'Log Workflow Status to CloudWatch'
    runs-on: ubuntu-latest
    container:
      image: ubuntu:bionic
    needs:
      - build_and_test
    if: always()  # run even if the dependent jobs have failed to log failures
    # Allow build reports to fail on pull requests.
    # When a contribution is made on a fork, the secrets will not be available,
    # and this step will be failing. This is acceptable.
    # On the other end, we want to be notified if this happens on merge, or
    # on schedule.
    continue-on-error: ${{ github.event_name == 'pull_request'}}
    steps:
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ secrets.AWS_REGION }}
    - name: Log Build Status
      uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        metric-value: ${{ ! contains(needs.build_and_test.outputs.build_result, 'failure') }}
    - name: Log Integration Test Status
      uses: ros-tooling/action-cloudwatch-metrics@0.0.4
      with:
        namespace: 'IntegrationTests'
        metric-value: ${{ ! contains(needs.build_and_test.outputs.test_result, 'failure') }}
